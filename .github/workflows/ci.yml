name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    services:
      postgres:
        env:
          POSTGRES_PASSWORD: secret
        image: postgres:16.2-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-retries 5
          --health-timeout 5s
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgres://postgres:secret@localhost:5432/postgres
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup uv  # let uv handle python setup, like on developers machine
        uses: astral-sh/setup-uv@v5
        with:
          pyproject-file: "{{ cookiecutter.name }}/pyproject.toml"
          enable-cache: true
          cache-dependency-glob: '{{ cookiejutter.name }}/uv.lock'

      - name: bootstrap
        run: |
          make bootstrap

      - name: lint the generated project
        run: |
          cd testproject
          make lint

      - name: save the bootstrap result
        uses: actions/upload-artifact@v4
        with:
          name: generated
          path: testproject
          include-hidden-files: true

  build-docker-image:
    needs: bootstrap
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup uv
        uses: astral-sh/setup-uv@v5
        with:
          pyproject-file: "{{ cookiecutter.name }}/pyproject.toml"
          enable-cache: true
          cache-dependency-glob: 'uv.lock'

      - name: get python version  # python itself not needed, just to get the latest compatible version with project
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version-file: "{{ cookiecutter.name }}/pyproject.toml"

      - name: download build artifact
        uses: actions/download-artifact@v4
        with:
          name: generated
          path: testproject

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup buildx
        uses: docker/setup-buildx-action@v3

      - name: make sure docker image is buildable
        uses: docker/build-push-action@v6
        with:
          build-args: |
            PYTHON_VERSION=${{ steps.setup-python.outputs.python-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: testproject
          push: false
